<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ALREADY_AUTHOR" xml:space="preserve">
    <value>Déjà auteur ?</value>
  </data>
  <data name="ALREADY_AUTHOR_BODY" xml:space="preserve">
    <value>Vous pouvez montrer au monde en incorporant ce badge dans votre blog. Si vous aviez le lien vers nous, ce serait totalement génial !</value>
  </data>
  <data name="ALREADY_AUTHOR_SUBTITLE" xml:space="preserve">
    <value>Super! C'est bien de vous avoir à bord !</value>
  </data>
  <data name="APP_TITLE" xml:space="preserve">
    <value>Planète .NET</value>
  </data>
  <data name="AUTHORS" xml:space="preserve">
    <value>Auteures</value>
  </data>
  <data name="AUTHORS_ALERT" xml:space="preserve">
    <value>L'ordre est aléatoire. Actualiser pour mélanger.</value>
  </data>
  <data name="AUTHORS_OPINION" xml:space="preserve">
    <value>Avis des auteurs</value>
  </data>
  <data name="AUTHORS_OPINION_1" xml:space="preserve">
    <value>Nous sommes fiers de la diversité de pensée - notre force réside dans nos expériences de points de vue collectifs uniques.</value>
  </data>
  <data name="AUTHORS_OPINION_2" xml:space="preserve">
    <value>Nous aimons partager cette diversité avec la communauté, et nous ne censurons ni ne curons ces blogs - ils représentent les opinions des auteurs.</value>
  </data>
  <data name="AUTHORS_OPINION_3" xml:space="preserve">
    <value>Nous fournissons un &lt;a href="{0}"&gt;moyen d'activer le contenu qui sera syndiqué&lt;/a&gt; et encourageons les auteurs à l'utiliser.</value>
  </data>
  <data name="CAN_I_READ_HERE" xml:space="preserve">
    <value>Puis-je simplement le lire ici?</value>
  </data>
  <data name="CAN_I_READ_HERE_BODY" xml:space="preserve">
    <value>Vous pouvez, mais nous ne voulons pas rediriger le trafic des sites individuels de nos collaborateurs. Voici un &lt;a href="{0}"&gt;aperçu&lt;/a&gt; au cas où vous essaieriez toujours de vous abonner.</value>
  </data>
  <data name="FACEBOOK" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="FOOTER_TEXT" xml:space="preserve">
    <value>Vous bloguez sur .NET ? Ajoutez-vous à l'agrégateur en envoyant une &lt;a href="https://github.com/mabroukmahdhi/planetdotnet"&gt;pull-request à notre référentiel&lt;/a&gt; sur GitHub. Planet .NET n'est pas affilié à Microsoft. C'est un projet open-source maintenu par la communauté pour la communauté.</value>
  </data>
  <data name="HOME" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="PODCASTS_TITLE" xml:space="preserve">
    <value>Podcasts .NET, émissions, newsletters et logiciels open source</value>
  </data>
  <data name="SEARCH" xml:space="preserve">
    <value>Recherche par nom d'auteur et ètiquette...</value>
  </data>
  <data name="TWITTER" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="WELCOME_INTRO" xml:space="preserve">
    <value>Nous sommes un agrégateur de contenu des membres de la communauté .NET. Pourquoi vous abonner individuellement lorsque vous pouvez vous abonner à un flux RSS pratique, pour voir tout le contenu généré par les membres de la communauté dans votre lecteur de nouvelles. Si RSS n'est pas votre truc, suivez nos comptes &lt;a href="{0}"&gt;Twitter&lt;/a&gt; et &lt;a href="{1}"&gt;Facebook&lt;/a&gt; qui sont automatiquement mis à jour avec le dernier contenu de la communauté.</value>
  </data>
  <data name="WELCOME_SUBTITLE" xml:space="preserve">
    <value>Bonjour et bienvenue sur Planet .NET !</value>
  </data>
  <data name="WELCOME_TITLE" xml:space="preserve">
    <value>Bienvenues!</value>
  </data>
  <data name="WHERE_IS_FEED" xml:space="preserve">
    <value>Où est le flux ? !</value>
  </data>
  <data name="WHERE_IS_FEED_BODY" xml:space="preserve">
    <value>Pointez votre lecteur RSS vers cette page et il la trouvera ; ou abonnez-vous &lt;a href="{0}"&gt;au flux manuellement&lt;/a&gt;.</value>
  </data>
  <data name="WHO_ARE_YOU" xml:space="preserve">
    <value>Qui êtes-vous ?</value>
  </data>
  <data name="WHO_ARE_YOU_BODY" xml:space="preserve">
    <value>Nous sommes membres de la communauté ! &lt;br /&gt;Vous pouvez en savoir plus &lt;a href="{0}"&gt;sur nous ici&lt;/a&gt;.</value>
  </data>
  <data name="XAMARIN_PLANET_THANKS" xml:space="preserve">
    <value>Un grand merci à la &lt;a href="https://www.planetxamarin.com/"&gt;Planète Xamarin&lt;/a&gt; pour ce superbe template !</value>
  </data>
</root>