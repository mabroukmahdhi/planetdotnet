<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ALREADY_AUTHOR" xml:space="preserve">
    <value>Already an author?</value>
  </data>
  <data name="ALREADY_AUTHOR_BODY" xml:space="preserve">
    <value>You can show off to the world by incorporating this badge into your blog. If you would have it link back to us, that would be totally awesome!</value>
  </data>
  <data name="ALREADY_AUTHOR_SUBTITLE" xml:space="preserve">
    <value>Great! Good to have you aboard!</value>
  </data>
  <data name="APP_TITLE" xml:space="preserve">
    <value>Planet .NET</value>
  </data>
  <data name="AUTHORS" xml:space="preserve">
    <value>Authors</value>
  </data>
  <data name="AUTHORS_ALERT" xml:space="preserve">
    <value>Order is random. Refresh to shuffle.</value>
  </data>
  <data name="AUTHORS_OPINION" xml:space="preserve">
    <value>Authors' opinions</value>
  </data>
  <data name="AUTHORS_OPINION_1" xml:space="preserve">
    <value>We pride ourselves on diversity of thought - our strength is in our unique collective viewpoints experiences</value>
  </data>
  <data name="AUTHORS_OPINION_2" xml:space="preserve">
    <value>We love sharing this diversity with the community, and we don't censor or curate these blogs - they represent the authors' opinions.</value>
  </data>
  <data name="AUTHORS_OPINION_3" xml:space="preserve">
    <value>We provide a &lt;a href="{0}"&gt;way to opt-in what content gets syndicated&lt;/a&gt; and encourage authors to use it.</value>
  </data>
  <data name="CAN_I_READ_HERE" xml:space="preserve">
    <value>Can I just read it here?</value>
  </data>
  <data name="CAN_I_READ_HERE_BODY" xml:space="preserve">
    <value>You can, but we don't want to redirect traffic from our people's individual sites. Here's a &lt;a href="{0}"&gt;sneak peek&lt;/a&gt; in case you're still trying to decide to subscribe.</value>
  </data>
  <data name="FACEBOOK" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="FOOTER_TEXT" xml:space="preserve">
    <value>Do you blog about .NET? Add yourself to the aggregator by sending in a &lt;a href="https://github.com/mabroukmahdhi/planetdotnet"&gt;pull-request to our repository&lt;/a&gt; on GitHub. Planet .NET is not affiliated with Microsoft and is a open-source project maintained by the community for the community.</value>
  </data>
  <data name="HOME" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="PODCASTS_TITLE" xml:space="preserve">
    <value>.NET Podcasts, Shows, Newsletters &amp; Open-source Software</value>
  </data>
  <data name="READ_IN" xml:space="preserve">
    <value>Read in other language:</value>
  </data>
  <data name="SEARCH" xml:space="preserve">
    <value>Search on author name and tag...</value>
  </data>
  <data name="TWITTER" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="WELCOME_INTRO" xml:space="preserve">
    <value>We are an aggregator of content from .NET Community members. Why subscribe individually when you can subscribe to one convenient RSS feed, to see all the content generated by the community members in you news reader. If RSS isn't your thing, follow our &lt;a href="{0}"&gt;Twitter&lt;/a&gt; or &lt;a href="{1}"&gt;Facebook&lt;/a&gt; accounts which are automatically updated with the latest content from the community.</value>
  </data>
  <data name="WELCOME_SUBTITLE" xml:space="preserve">
    <value>Hi, and welcome to Planet .NET!</value>
  </data>
  <data name="WELCOME_TITLE" xml:space="preserve">
    <value>Welcome!</value>
  </data>
  <data name="WHERE_IS_FEED" xml:space="preserve">
    <value>Where's the feed?!</value>
  </data>
  <data name="WHERE_IS_FEED_BODY" xml:space="preserve">
    <value>Point your RSS reader at this page and it'll find it; or subscribe to &lt;a href="{0}"&gt;the feed manually&lt;/a&gt;.</value>
  </data>
  <data name="WHO_ARE_YOU" xml:space="preserve">
    <value>Who are you all?</value>
  </data>
  <data name="WHO_ARE_YOU_BODY" xml:space="preserve">
    <value>We are community members! &lt;br /&gt;You can read more &lt;a href="{0}"&gt;about us here&lt;/a&gt;.</value>
  </data>
  <data name="XAMARIN_PLANET_THANKS" xml:space="preserve">
    <value>Many thanks to the &lt;a href="https://www.planetxamarin.com/"&gt;Planet Xamarin&lt;/a&gt; for this awesome template!</value>
  </data>
</root>