<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ALREADY_AUTHOR" xml:space="preserve">
    <value>Du bist bereits Autor?</value>
  </data>
  <data name="ALREADY_AUTHOR_BODY" xml:space="preserve">
    <value>Du kannst der Welt zeigen, indem Du dieses Abzeichen in Deinen Blog integrierst. Wenn Du es zu uns zurückverlinken würdest, wäre das total großartig!</value>
  </data>
  <data name="ALREADY_AUTHOR_SUBTITLE" xml:space="preserve">
    <value>Yuppi! Schön, Dich an Bord zu haben!</value>
  </data>
  <data name="APP_TITLE" xml:space="preserve">
    <value>Planet .NET</value>
  </data>
  <data name="AUTHORS" xml:space="preserve">
    <value>Authorinnen &amp; Authoren</value>
  </data>
  <data name="AUTHORS_ALERT" xml:space="preserve">
    <value>Die Reihenfolge ist zufällig. Aktualisieren um zu mischen.</value>
  </data>
  <data name="AUTHORS_OPINION" xml:space="preserve">
    <value>Meinungen der Autoren</value>
  </data>
  <data name="AUTHORS_OPINION_1" xml:space="preserve">
    <value>Wir sind stolz auf unsere Gedankenvielfalt – unsere Stärke liegt in unseren einzigartigen Erfahrungen mit kollektiven Standpunkten</value>
  </data>
  <data name="AUTHORS_OPINION_2" xml:space="preserve">
    <value>Wir lieben es, diese Vielfalt mit der Community zu teilen, und wir zensieren oder kuratieren diese Blogs nicht – sie repräsentieren die Meinung der Autoren.</value>
  </data>
  <data name="AUTHORS_OPINION_3" xml:space="preserve">
    <value>Wir bieten eine &lt;a href="{0}"&gt;Möglichkeit, festzulegen, welche Inhalte syndiziert werden&lt;/a&gt;, und ermutigen Autoren, sie zu verwenden.</value>
  </data>
  <data name="CAN_I_READ_HERE" xml:space="preserve">
    <value>Kann ich das hier einfach lesen?</value>
  </data>
  <data name="CAN_I_READ_HERE_BODY" xml:space="preserve">
    <value>Klar! Aber wir möchten keinen Traffic von den einzelnen Websites unserer Mitarbeiter umleiten. Hier ist eine &lt;a href="{0}"&gt;Vorschau&lt;/a&gt; für den Fall, dass Du immer noch versuchst, Dich für ein Abonnement zu entscheiden.</value>
  </data>
  <data name="FACEBOOK" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="FOOTER_TEXT" xml:space="preserve">
    <value>Bloggen Sie über .NET? Fügen Sie sich dem Aggregator hinzu, indem Sie eine &lt;a href="https://github.com/mabroukmahdhi/planetdotnet"&gt;Pull-Request an unser Repository&lt;/a&gt; auf GitHub senden. Planet .NET ist nicht mit Microsoft verbunden und ist ein Open-Source-Projekt, das von der Community für die Community gepflegt wird.</value>
  </data>
  <data name="HOME" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="PODCASTS_TITLE" xml:space="preserve">
    <value>.NET-Podcasts, Shows, Newsletter und Open-Source-Software</value>
  </data>
  <data name="PREVIEW" xml:space="preserve">
    <value>Vorschau</value>
  </data>
  <data name="READ_IN" xml:space="preserve">
    <value>In anderer Sprache lesen:</value>
  </data>
  <data name="SEARCH" xml:space="preserve">
    <value>Nach Namen &amp; Tag suchen...</value>
  </data>
  <data name="TWITTER" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="WELCOME_INTRO" xml:space="preserve">
    <value>Wir sind ein Aggregator von Inhalten von .NET Community-Mitgliedern. Warum einzeln abonnieren, wenn Du einen bequemen RSS-Feed abonnieren kannst, um alle von den Community-Mitgliedern generierten Inhalte in Deinem Newsreader zu sehen. Wenn RSS nicht Dein Ding ist, folge unseren &lt;a href="{0}"&gt;Twitter&lt;/a&gt;- oder &lt;a href="{1}"&gt;Facebook&lt;/a&gt;-Konten, die automatisch mit den neuesten Inhalten aktualisiert werden aus der Gemeinde.</value>
  </data>
  <data name="WELCOME_SUBTITLE" xml:space="preserve">
    <value>Hallo und willkommen bei Planet .NET!</value>
  </data>
  <data name="WELCOME_TITLE" xml:space="preserve">
    <value>Herzlich willkommen!</value>
  </data>
  <data name="WHERE_IS_FEED" xml:space="preserve">
    <value>Wo ist der Feed?!</value>
  </data>
  <data name="WHERE_IS_FEED_BODY" xml:space="preserve">
    <value>Richte Deinen RSS-Reader auf diese Seite und er wird es finden; oder &lt;a href="{0}"&gt;den Feed manuell abonnieren&lt;/a&gt;.</value>
  </data>
  <data name="WHO_ARE_YOU" xml:space="preserve">
    <value>Wer seid ihr?</value>
  </data>
  <data name="WHO_ARE_YOU_BODY" xml:space="preserve">
    <value>Wir sind Community-Mitglieder! &lt;br /&gt;Weitere Informationen &lt;a href="{0}"&gt;über uns&lt;/a&gt; finden Sie hier.</value>
  </data>
  <data name="XAMARIN_PLANET_THANKS" xml:space="preserve">
    <value>Vielen Dank an &lt;a href="https://www.planetxamarin.com/"&gt;Planet Xamarin&lt;/a&gt; für diese tolle Vorlage!</value>
  </data>
</root>